/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };


        combicaps: combicaps {
            compatible = "zmk,behavior-hold-tap";
            label = "COMBICAPS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "hold-preferred";
            bindings = <&ctrlshft>, <&kp>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };

        ctrlshft: ctrlshft {
            label = "CTRLSHFT_MACRO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LSHFT &kp LCTRL>
              , <&macro_pause_for_release>
              , <&macro_release &kp LSHFT &kp LCTRL>;
        };
    };

    /* Automatically generated keymap */
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC               &kp F2          &kp F3         &kp F4     &kp F5                                                                                                           &kp F6     &kp F7       &kp F8         &kp F9          &kp F10
&kp F1                &kp N1          &kp N2         &kp N3     &kp N4       &kp N5                                                                                   &kp N6     &kp N7     &kp N8       &kp N9         &kp N0          &kp MINUS
&kp TAB               &kp Q           &kp W          &kp E      &kp R        &kp T                                                                                    &kp Y      &kp U      &kp I        &kp O          &kp P           &kp BSLH
&combicaps CAPS CAPS  &kp A           &kp S          &kp D      &kp F        &kp G                                                                                    &kp H      &kp J      &kp K        &kp L          &lt LOWER SEMI  &kp SQT
&mt LSHFT EQUAL       &kp Z           &kp X          &kp C      &kp V        &kp B          &kp LCTRL  &kp SCROLLLOCK &kp LGUI   &kp RGUI  &kp RALT  &kp RCTRL        &kp N      &kp M      &kp COMMA    &kp DOT        &kp FSLH        &mt RSHFT MINUS
&magic MAGIC 0        &mt LCTRL LBRC  &mt LALT RBRC  &kp GRAVE  &kp SPACE                   &kp BSPC   &kp DEL        &kp LSHFT  &kp RSHFT &kp RET   &kp SPACE                   &kp SPACE  &kp GRAVE    &mt RALT LBKT  &mt RCTRL RBKT  &kp PG_DN
            >;
        };

        lower_layer {
            bindings = <
     &trans      &trans    &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                           &kp C_MUTE    &kp C_VOL_DN   &kp C_VOL_UP  &none            &kp PAUSE_BREAK
     &trans      &trans    &trans          &trans          &trans            &trans                                                     &kp LEFT_PARENTHESIS  &kp KP_NUM    &kp KP_EQUAL   &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
     &trans      &trans    &kp PG_UP       &kp UP_ARROW    &kp HOME          &trans                                                    &kp RIGHT_PARENTHESIS  &trans        &trans         &trans        &kp KP_MINUS     &kp SCROLLLOCK
     &trans      &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp RET                                                             &kp PERCENT  &kp RCTRL     &kp RSHFT      &kp RALT      &kp KP_PLUS      &none
     &trans      &trans    &kp PG_DN       &trans          &kp END           &kp PG_DN  &trans  &trans  &to DEFAULT  &trans  &trans  &trans      &kp COMMA    &trans        &trans         &trans        &kp KP_ENTER     &trans
 &magic MAGIC 0  &kp CAPS  &kp INS         &kp F11         &kp F12                      &trans  &trans  &trans       &trans  &trans  &trans                   &trans        &trans         &trans        &kp KP_ENTER     &trans
            >;
        };

        magic_layer {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                     &none      &none       &none         &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none      &none      &none       &none         &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none  &kp KP_N7  &kp KP_N8   &kp KP_N9         &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none  &kp KP_N4  &kp KP_N5   &kp KP_N6         &none     &bootloader
      &sys_reset        &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none  &kp KP_N1  &kp KP_N2   &kp KP_N3         &none      &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none          &kp KP_N0      &none  &kp KP_DOT  &kp KP_EQUAL           &none
            >;
        };
    };
};
